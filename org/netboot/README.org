#+TITLE: More to come
* Bootstrapping from Docker
** Environment for docker-init

Customize with your own email and repos (usually forks) to check out.

   #+name: netboot-dev.env
   #+begin_src shell :tangle netboot-dev.env
     # This enabled netboot
     KIND_LOCAL_NETBOOT_ENABLE=true
     # The netboot container name
     KIND_LOCAL_NETBOOT_NAME=netboot
     # Pin your image
     KUBEMACS_IMAGE=kubemacs/kubemacs:latest
     #KUBEMACS_IMAGE=heyste/kubemacs:latest
     # $(id -u) / mainly for ~/.kube/config permissions
     HOST_UID="1000"
     # Vars for git commits
     KUBEMACS_GIT_EMAIL=hh@ii.coop
     KUBEMACS_GIT_NAME="Hippie Hacker"
     KUBEMACS_TIMEZONE=Pacific/Auckland
     # This is the kind cluster name, maybe we should rename
     # for some reason we can't used kind as the name
     KUBEMACS_KIND_NAME=kubemacs
     # ~/.kube/$KUBEMACS_HOSTCONFIG_NAME
     KUBEMACS_HOST_KUBECONFIG_NAME=config
     # Using a docker registry alongside kind
     KIND_LOCAL_REGISTRY_ENABLE=true
     KIND_LOCAL_REGISTRY_NAME=local-registry
     KIND_LOCAL_REGISTRY_PORT=5000
     # Defaults to home
     KUBEMACS_INIT_DEFAULT_REPOS_FOLDER=/home/ii
     # The repositories to check out
     KUBEMACS_INIT_DEFAULT_REPOS='https://github.com/kubemacs/kubemacs.git'
     # The folder to start tmate/emacs in
     KUBEMACS_INIT_DEFAULT_DIR=kubemacs/org/netboot
     # The first file you want emacs to open
     KUBEMACS_INIT_ORG_FILE=kubemacs/org/netboot/README.org
     # If you want to see lots of information
     KUBEMACS_INIT_DEBUG=true
   #+end_src

** Running Docker
   #+name: netboot-dev.sh
   #+begin_src shell :tangle netboot-dev.sh :tangle-mode (identity #o755)
     ENV_FILE=netboot-dev.env
     . $ENV_FILE
     docker run \
            --env-file $ENV_FILE \
            --name kubemacs-docker-init \
            --user root \
            --privileged \
            --network host \
            --rm \
            -it \
            -v "$HOME/.kube:/tmp/.kube" \
            -v /var/run/docker.sock:/var/run/docker.sock \
            $KUBEMACS_IMAGE \
            docker-init.sh
   #+end_src
* dependencies
** TODO libvirtd might be listening on dhcp
** port 67 free
*** netstat
   #+begin_src shell
     netstat -uln | grep 67
     #  | awk '{print $4}'
   #+end_src

   #+RESULTS:
   #+begin_src shell
   udp        0      0 0.0.0.0:67              0.0.0.0:*                          
   #+end_src
*** ss
   #+begin_src shell
     netstat -uln | grep 67
     #  | awk '{print $4}'
   #+end_src

   #+RESULTS:
   #+begin_src shell
   udp        0      0 0.0.0.0:67              0.0.0.0:*                          
   #+end_src
*** lsof
   #+begin_src shell
      sudo lsof -i -n -P | grep 67 | grep LIST
   #+end_src

   #+RESULTS:
   #+begin_src shell
   webproc   18902            root    3u  IPv6 23933648      0t0  TCP *:8067 (LISTEN)
   #+end_src

* pxeboot alternatives
** current pxeboot cycle
*** build
 Building, runnig pxeboot
   #+begin_src tmate :dir "."
     sudo docker build -t heyste/pxeboot pxe
   #+end_src
*** stop / run
 Building, runnig pxeboot
   #+begin_src tmate :dir "."
     docker rm -f pxeboot
     docker run -d --restart=always \
                --network host \
                --name pxeboot \
                heyste/pxeboot:latest
   #+end_src
*** verify that it's running
   #+begin_src shell
     docker ps | grep pxeboot
   #+end_src

   #+RESULTS:
   #+begin_src shell
   735b32f7db11        heyste/pxeboot:latest   "webproc --port 8067…"   3 minutes ago       Restarting (1) 46 seconds ago                                                                                                                                                                           pxeboot
   #+end_src

** TODO alternate GoPXE cycle
 Possible alternative at:
 https://github.com/ppetko/GoPXE
*** stop / run
 Building, runnig pxeboot
   #+begin_src tmate :dir "."
     docker rm -f pxeboot
     docker run --rm --net=host --name goPXE -td \
             --mount type=bind,source="$(pwd)"/dhcpd.conf,target=/etc/dhcp/dhcpd.conf \
             --mount type=bind,source="$(pwd)"/tftpd.conf,target=/etc/xinetd.d/tftp \
             ppetko/gopxe
   #+end_src
** TODO alternate rpi-pxe-server cycle
 https://github.com/pimterry/rpi-pxe-server
** TODO alternate astralboot
 https://github.com/ipfs/astralboot
* Start here in kubemacs
** ensure pxeboot started

   - Note taken on [2020-02-28 Fri 09:54] \\
     I don't think this has to be started during kubemacs/bin/docker-init.sh
     Probably best just to be inside the org-file.
  #+begin_src shell
    docker ps | grep pxeboot
  #+end_src

  #+RESULTS:
  #+begin_src shell
  9cb9acc7ab96        heyste/pxeboot:latest   "webproc --port 8067…"   4 minutes ago       Up 4 minutes                                                                                                                                                                                pxeboot
  #+end_src

** ensure 
